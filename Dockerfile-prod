# Builder
FROM node:16-alpine3.15 as builder

WORKDIR /app

COPY package.json pnpm-lock.yaml ./
COPY prisma ./prisma

RUN npm install -g pnpm
RUN pnpx prisma generate && pnpx prisma migrate dev && npx prisma db seed
RUN pnpm install --production --loglevel warn

COPY . .

# Build
RUN set -x \
  && pnpm run build \
  && echo "{ \"status\": \"Ok\", \"result\": { \"buildDate\": \"$(date)\" } }" > build.json

# Release
FROM node:16-alpine3.15
ENV PORT 3000

RUN addgroup -S docker && \
  adduser -S docker -G docker

USER docker
WORKDIR /app

#COPY --from=builder --chown=docker:docker /app/tsconfig.json ./tsconfig.json
#COPY --from=builder --chown=docker:docker /app/build.json ./build.json
COPY --from=builder --chown=docker:docker /app/package.json /app/pnpm-lock.yaml ./
COPY --from=builder --chown=docker:docker /app/node_modules ./node_modules
COPY --from=builder --chown=docker:docker /app/dist ./dist

EXPOSE $PORT
CMD ["npm", "run", "start:prod"]
